
swagger: '2.0'
info:
  title: Joke Tag API
  description: >
    This API is one of the most important of the microservices.
    It allow users to register and query tags that sort jokes.
  contact:
    email: salathielgenese@gamil.com
    name: YIMGA YIMGA Salathiel Genèse
  license:
    name: >
      The MIT License (MIT)
      Copyright © 2019 Squall.IO
      Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
      The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
      THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Tags
    description: Create, Query, Delete tags.
definitions:
  Tag:
    type: object
    required:
      - label
      - id
    properties:
      id:
        type: integer
        format: int64
      label:
        type: string

responses:
  TagDeleteRet:
    description: Tag successful deletion response
    schema:
      type: object
      properties:
        status:
          type: string
          example: success
        content:
          type: number
          example: number
          description: ID of deleted tag
  TagRet:
    description: A tag, as returned by server
    schema:
      type: object
      properties:
        status:
          type: string
          example: string
        content:
          $ref: '#/definitions/Tag'
  TagsRet:
    description: A tag, as returned by server
    schema:
      type: object
      properties:
        status:
          type: string
          example: success
        content:
          type: array
          items:
            $ref: '#/definitions/Tag'
  serverErrorResponse:
    description: Internal server error response
    schema:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Database is unreachable
  duplicateTagLabelErrorResponse:
    description: Privided tag label already exists
    schema:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Validation error
        errors:
          type: object
          properties:
            label:
              type: array
              properties:
                id:
                  type: string
                  example: label
                message:
                  type: string
                  example: Duplicate field value
